// https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree/description/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public TreeNode sortedArrayToBST(int[] nums) {
        if (nums == null || nums.length == 0) return null;
        else if (nums.length == 1) return new TreeNode(nums[0]);

        return sortedArrayToBSTInner(nums, 0, nums.length - 1);
    }
    
    public TreeNode sortedArrayToBSTInner(int[] nums, int start, int end) {
        TreeNode n;
        if (end - start + 1 == 1) return new TreeNode(nums[start]);
        if (end - start + 1 == 2) {
            n = new TreeNode(nums[start]);
            n.right = new TreeNode(nums[start + 1]);
            return n;
        }
        int mid = start + (end - start) / 2;
        n = new TreeNode(nums[mid]);
        n.left = sortedArrayToBSTInner(nums, start, mid - 1);
        n.right = sortedArrayToBSTInner(nums, mid + 1, end);
        return n;
    }
}
