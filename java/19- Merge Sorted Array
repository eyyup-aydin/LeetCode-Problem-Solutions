// https://leetcode.com/problems/merge-sorted-array/description/

class Solution {
    public void merge(int[] nums1, int m, int[] nums2, int n) {
        int i = 0;
        int l = 0, r = m - 1;
        int insertPoint = -1;

        if (m == 0) {
            System.arraycopy(nums2, 0, nums1, 0, n);
            return;
        }
        while(i < n) {
            while (l <= r) {
                if (r - l <= 1) {
                    if (nums1[r] <= nums2[i])
                        insertPoint = r + 1;
                    else if (nums1[l] <= nums2[i])
                        insertPoint = l + 1;
                    else
                        insertPoint = l;
                    break;
                }
                int mid = l + (r - l)/2;
                if (nums1[mid] < nums2[i]) {
                    l = mid;
                }
                else if (nums1[mid] > nums2[i])
                    r = mid - 1;
                else {
                    insertPoint = mid;
                    break;
                }

            }

            int old = nums2[i++];
            int t;
            for(int k = insertPoint; k < m + 1; ++k) {
                t = nums1[k];
                nums1[k] = old;
                old = t;
            }
            l = insertPoint;
            r = (++m) - 1;
        }
    }
}
