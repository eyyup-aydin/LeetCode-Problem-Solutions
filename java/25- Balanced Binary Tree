// https://leetcode.com/problems/balanced-binary-tree/description/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public boolean isBalanced(TreeNode root) {
        return root == null || (isBalancedInner(root) != -1);
    }
    
    public int isBalancedInner(TreeNode node) {
        if (node == null) return 0;
        if (node.left == null && node.right == null) return 1;
        int left = isBalancedInner(node.left);
        if (left == -1) return -1;
        int right = isBalancedInner(node.right);
        if (right == -1) return -1;
        if (Math.abs(left - right) > 1) return -1;
        return Math.max(left, right) + 1;
    }
}
